/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ReaderPricingUtils,
  ReaderPricingUtilsInterface,
} from "../../../contracts/reader/ReaderPricingUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "InvalidSwapMarket",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "InvalidTokenIn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "executionPrice",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionSizeInUsd",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "priceImpactUsd",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
    ],
    name: "NegativeExecutionPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "acceptablePrice",
        type: "uint256",
      },
    ],
    name: "OrderNotFulfillableAtAcceptablePrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__Exp2InputTooBig",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "PRBMathUD60x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "priceImpactUsd",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "sizeDeltaUsd",
        type: "uint256",
      },
    ],
    name: "PriceImpactLargerThanOrderSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "UnableToGetCachedTokenPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "UnableToGetOppositeToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "usdDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "longOpenInterest",
        type: "uint256",
      },
    ],
    name: "UsdDeltaExceedsLongOpenInterest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "usdDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "poolUsd",
        type: "uint256",
      },
    ],
    name: "UsdDeltaExceedsPoolValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "usdDelta",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "shortOpenInterest",
        type: "uint256",
      },
    ],
    name: "UsdDeltaExceedsShortOpenInterest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "indexTokenPrice",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "positionSizeInUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionSizeInTokens",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "sizeDeltaUsd",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
    ],
    name: "getExecutionPrice",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "priceImpactUsd",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "priceImpactDiffUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executionPrice",
            type: "uint256",
          },
        ],
        internalType: "struct ReaderPricingUtils.ExecutionPriceResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "indexTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "longTokenPrice",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props",
            name: "shortTokenPrice",
            type: "tuple",
          },
        ],
        internalType: "struct MarketUtils.MarketPrices",
        name: "prices",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "uiFeeReceiver",
        type: "address",
      },
    ],
    name: "getSwapAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "feeReceiverAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeAmountForPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountAfterFees",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "uiFeeReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "uiFeeReceiverFactor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uiFeeAmount",
            type: "uint256",
          },
        ],
        internalType: "struct SwapPricingUtils.SwapFees",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DataStore",
        name: "dataStore",
        type: "DataStore",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "indexToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "longToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "shortToken",
            type: "address",
          },
        ],
        internalType: "struct Market.Props",
        name: "market",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "tokenInPrice",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct Price.Props",
        name: "tokenOutPrice",
        type: "tuple",
      },
    ],
    name: "getSwapPriceImpact",
    outputs: [
      {
        internalType: "int256",
        name: "priceImpactUsdBeforeCap",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "priceImpactAmount",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61390d61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063146fa98e1461005057806381eba89e1461008a578063dafa66bf146100ab575b600080fd5b61006361005e36600461355e565b61011d565b60408051825181526020808401519082015291810151908201526060015b60405180910390f35b61009d6100983660046135e0565b610213565b60405161008192919061366b565b6100be6100b9366004613679565b61030e565b604080519384526020808501939093528151848201529181015160608085019190915291810151608080850191909152918101516001600160a01b031660a0808501919091529181015160c0840152015160e082015261010001610081565b610125613177565b61012d613198565b80516001600160a01b038a1690526020810188905261015c61014e85610599565b604083810151602001510152565b604081810151015183151590526000808513908161017b57841561017d565b845b90506101a18161018e576000610192565b6000195b60408501516020015160a00152565b6080830180516020908101518a9052815181015101889052516040015185151590526101cb613177565b60008713156101eb576101de848b6105b4565b6040840152508152610202565b6101f5848b6106d2565b6040840152602083015281525b93505050505b979650505050505050565b60008060006102298a8a60000151886000610845565b90506102ca6040518061010001604052808c6001600160a01b031681526020018b81526020018a6001600160a01b03168152602001896001600160a01b0316815260200161027688610a16565b815260200161028487610a16565b81526020016102a961029589610a16565b85604001516102a49190613774565b610a38565b81526020016102ba61029589610a16565b6102c39061378b565b9052610aa2565b925060008313156102ed576102e68a8a60000151898787610b83565b9150610301565b6102fe8a8a600001518a8887610b83565b91505b5097509795505050505050565b60008061031961322e565b61032161326d565b88604001516001600160a01b0316876001600160a01b03161415801561035d575088606001516001600160a01b0316876001600160a01b031614155b156103885788516040516353f8171160e01b815261037f9189916004016137a7565b60405180910390fd5b61039189610bfa565b61039b878a610c45565b6001600160a01b031681526103b1878a8a610cb4565b602082015280516103c3908a8a610cb4565b604082015288516000906103da908c908989610845565b9050600061047c6040518061010001604052808e6001600160a01b031681526020018d81526020018b6001600160a01b0316815260200185600001516001600160a01b031681526020016104318660200151610a16565b81526020016104438660400151610a16565b81526020016104676104588760200151610a16565b86604001516102a49190613774565b81526020016102ba6104588760200151610a16565b905060008082131561050e576040808401516060860181905290850151602090810151908601515190916104b09190613774565b6104ba91906137d7565b84608001818152505083608001518460a00181815250506104ea8d8d600001518660000151876040015186610b83565b90506104f581610d55565b8460800181815161050691906137eb565b90525061057f565b6105238d8d600001518c876020015186610b83565b90506105366105318261378b565b610d55565b836040015161054591906137fe565b606085018190526040850151602090810151908601515190916105689190613774565b61057291906137d7565b6080850181905260a08501525b608090930151955091935091505096509650969350505050565b6000808212156105ac57816000036105ae565b815b92915050565b60008060008061061d60405180608001604052808860000151600001516001600160a01b03168152602001886020015181526020016105ff6102a48a60400151602001516040015190565b81526020016106148960400151604001515190565b15159052610da7565b865151602088015151604089015192935061064a928890859061064590602001516040015190565b610e4f565b9050600080821315610674576106638660200151610a38565b61066d9083613811565b9050610685565b610682828760000151610ecc565b90505b60006106c08761069e8a60400151602001516040015190565b846106b28c604001516020015160a0015190565b6040808e0151015151610f40565b929550909350909150505b9250925092565b60008060006106fb60405180606001604052806000815260200160008152602001600081525090565b60006107108760400151602001516040015190565b905061076860405180608001604052808960000151600001516001600160a01b031681526020018960200151815260200161074a84610a38565b6107539061378b565b81526020016106148a60400151604001515190565b80835287515160208901515161078092899085610e4f565b808352600013156107e5578651516020880151516000916107a19183611030565b905060006107b26102a4848461105a565b6107bb9061378b565b905080846000015112156107e25783516107d990610531908361383f565b60208501528084525b50505b610827866107f98960800151602001515190565b60808a01516020908101510151855160408c01516020015160a0015186919060808e01516040015151611073565b60408301819052825160209093015192989297509550909350505050565b61084d61322e565b61085561322e565b6000866001600160a01b031663bd02d0f561086f88611214565b6040518263ffffffff1660e01b815260040161088d91815260200190565b602060405180830381865afa1580156108aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ce9190613866565b90506000876001600160a01b031663bd02d0f560405160200161091d9060208082526018908201527729aba0a82fa322a2afa922a1a2a4ab22a92fa320a1aa27a960411b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161095191815260200190565b602060405180830381865afa15801561096e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109929190613866565b905060006109a0878461105a565b90506109ac818361105a565b8085526109b990826137fe565b60208501526001600160a01b03861660608501526109d78987611294565b608085018190526109e990889061105a565b60a085018190526109fa82896137fe565b610a0491906137fe565b60408501525091979650505050505050565b6000600282600001518360200151610a2e91906137eb565b6105ae91906137d7565b60006001600160ff1b038211156105ac5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b606482015260840161037f565b600080610aae836113e2565b90506000610ac5846000015185602001518461142b565b905060008112610ad6579392505050565b6000806000610af18760000151886020015160000151611549565b92509250925082610b0757509195945050505050565b6000808860200151604001516001600160a01b031689604001516001600160a01b031603610b39575082905081610b3f565b50819050825b6000610b4c8a84846116e0565b90506000610b638b600001518c602001518461142b565b9050878112610b725787610b74565b805b9b9a5050505050505050505050565b60008060008313610b95578351610b9b565b83602001515b9050600080841315610be057610bb082610a38565b610bba9085613811565b90506000610bcc6102a48a8a8a6117ee565b905080821315610bda578091505b50610bed565b610bea8483610ecc565b90505b9150505b95945050505050565b80606001516001600160a01b031681604001516001600160a01b031603610c425780516040516332e6f44d60e21b81526001600160a01b03909116600482015260240161037f565b50565b600081604001516001600160a01b0316836001600160a01b031603610c6f575060608101516105ae565b81606001516001600160a01b0316836001600160a01b031603610c97575060408101516105ae565b8151604051637a0ca68160e01b815261037f9185916004016137a7565b610cbc6132b8565b82604001516001600160a01b0316846001600160a01b031603610ce457506020810151610d4e565b82606001516001600160a01b0316846001600160a01b031603610d0c57506040810151610d4e565b82602001516001600160a01b0316846001600160a01b031603610d3157508051610d4e565b8251604051635f2394d160e11b815261037f9186916004016137a7565b9392505050565b6000808212156105ac5760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015260640161037f565b600080610db383611868565b90506000610dce8460000151856020015160000151846118ab565b905060008112610ddf579392505050565b600080610df88660000151876020015160200151611990565b9150915081610e0b575090949350505050565b6000610e178783611aa6565b90506000610e328860000151896020015160000151846118ab565b9050848112610e415784610e43565b805b98975050505050505050565b600080831215610e60575081610bf1565b6000610e6c8787611b20565b90506000610e838660000151836102a49190613774565b905080851315610e91578094505b6000610e9f89896001611030565b90506000610eb06102a4878461105a565b905080871315610ebe578096505b509498975050505050505050565b600080831215610f0e57610edf82610a38565b610ee883610a38565b610ef2908561383f565b610efd90600161387f565b610f079190613811565b90506105ae565b610f1782610a38565b6001610f2284610a38565b610f2c908661387f565b610f36919061383f565b610d4e9190613811565b600080610f4f87846001611b99565b9050808615610fe457600084610f6d57610f688761378b565b610f6f565b865b90506000610f7c84610a38565b610f8690836138a7565b9050600081128015610fa3575088610fa06105318361378b565b10155b15610fc55780896040516378320e4960e11b815260040161037f92919061366b565b6000610fd18a83611bd2565b9050610fde858b83611c02565b93505050505b838015610ff15750848111155b806110055750831580156110055750848110155b15611013579150610bf19050565b808560405163e09ad0e960e01b815260040161037f92919061366b565b600080600061103f8686611c0f565b915091508361104e5780611050565b815b9695505050505050565b6000610d4e838368327cb2734119d3b7a9601e1b611c02565b600061109960405180606001604052806000815260200160008152602001600081525090565b6110a4898415611d23565b808252602082015285158015906110bb5750600087115b156111ba57826110d3576110ce8561378b565b6110d5565b845b6040820181905260001380156110fa5750856110f882604001516105319061378b565b115b15611120578060400151866040516378320e4960e11b815260040161037f92919061366b565b600061112b87610a38565b61113a8a84604001518b611d3a565b6111449190613811565b90506000816111568460000151610a38565b611160919061387f565b905060008112156111a9578251604080850151905163cc32db9960e01b8152600481018490526024810192909252604482018c905260648201526084810189905260a40161037f565b6111b281610d55565b602084015250505b8280156111cb575083816020015110155b806111e35750821580156111e3575083816020015111155b156111f357602001519050610208565b80602001518460405163e09ad0e960e01b815260040161037f92919061366b565b6000604051602001611249906020808252600f908201526e29aba0a82fa322a2afa320a1aa27a960891b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038416908201526060015b604051602081830303815290604052805190602001209050919050565b600080836001600160a01b031663bd02d0f56040516020016112db9060208082526011908201527026a0ac2faaa4afa322a2afa320a1aa27a960791b604082015260600190565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b815260040161130f91815260200190565b602060405180830381865afa15801561132c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113509190613866565b90506000846001600160a01b031663bd02d0f561136c86611d7a565b6040518263ffffffff1660e01b815260040161138a91815260200190565b602060405180830381865afa1580156113a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cb9190613866565b90508181106113da5781610bf1565b949350505050565b6113ea6132d2565b6000611403836000015184602001518560400151611dad565b9050600061141e846000015185602001518660600151611dad565b90506113da8483836116e0565b60008061144083600001518460200151611e4b565b9050600061145684604001518560600151611e4b565b60608501516040860151602087015187518951949550111591101514906000906001600160a01b0389169063bd02d0f59061149090611e6d565b6040518263ffffffff1660e01b81526004016114ae91815260200190565b602060405180830381865afa1580156114cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ef9190613866565b905081156115275786518484109060009061150c908b9084611eae565b905061151a86868386611ebd565b9650505050505050610d4e565b6000806115388a8a60000151611eef565b9150915061151a8686848487611f8b565b600080600080856001600160a01b031663a6ed563e61156787611fd4565b6040518263ffffffff1660e01b815260040161158591815260200190565b602060405180830381865afa1580156115a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c69190613866565b9050806115de576000806000935093509350506106cb565b6001866001600160a01b031663bd02d0f56115fa84600161200b565b6040518263ffffffff1660e01b815260040161161891815260200190565b602060405180830381865afa158015611635573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116599190613866565b876001600160a01b031663bd02d0f561167385600061200b565b6040518263ffffffff1660e01b815260040161169191815260200190565b602060405180830381865afa1580156116ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d29190613866565b935093509350509250925092565b6116e86132d2565b60008460800151846116fa9190613774565b905060008560a001518461170e9190613774565b905060008660c001511280156117335750816117318760c001516105319061378b565b115b15611759578560c0015182604051632e94940960e01b815260040161037f92919061366b565b60008660e0015112801561177c57508061177a8760e001516105319061378b565b115b156117a2578560e0015181604051632e94940960e01b815260040161037f92919061366b565b60006117b2838860c00151611bd2565b905060006117c4838960e00151611bd2565b60408051608081018252958652602086019490945292840191909152506060820152949350505050565b6000836001600160a01b031663bd02d0f56118098585612097565b6040518263ffffffff1660e01b815260040161182791815260200190565b602060405180830381865afa158015611844573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113da9190613866565b6118706132d2565b6000611886836000015184602001516001612111565b9050600061189e846000015185602001516000612111565b90506113da848383612164565b6000806118c083600001518460200151611e4b565b905060006118d684604001518560600151611e4b565b6060850151604086015160208701518751939450909211159111151460006001600160a01b03881663bd02d0f561190c89612256565b6040518263ffffffff1660e01b815260040161192a91815260200190565b602060405180830381865afa158015611947573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196b9190613866565b9050811561198357838310600061150c8a8a84612299565b6000806115388a8a6122a4565b6000806000846001600160a01b031663a6ed563e6119ad86612340565b6040518263ffffffff1660e01b81526004016119cb91815260200190565b602060405180830381865afa1580156119e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0c9190613866565b905080611a20576000809250925050611a9f565b6001856001600160a01b031663dc97d962611a3a84612376565b6040518263ffffffff1660e01b8152600401611a5891815260200190565b602060405180830381865afa158015611a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a999190613866565b92509250505b9250929050565b611aae6132d2565b6000806000841315611aca57611ac384610d55565b9050611ad9565b611ad66105318561378b565b91505b600085604001511215611b15576000611af986604001516105319061378b565b9050611b0581846137eb565b9250611b1181836137eb565b9150505b610bf1858383612164565b6000826001600160a01b031663bd02d0f5611b3a846123e1565b6040518263ffffffff1660e01b8152600401611b5891815260200190565b602060405180830381865afa158015611b75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4e9190613866565b60008215611bba5781611bad578351611bb3565b83602001515b9050610d4e565b81611bc95783602001516113da565b50509051919050565b600080821315611bef57611be582610599565b610f0790846137eb565b611bf882610599565b610d4e90846137fe565b60006113da848484612422565b6000806000846001600160a01b031663bd02d0f5611c2e8660016124d1565b6040518263ffffffff1660e01b8152600401611c4c91815260200190565b602060405180830381865afa158015611c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c8d9190613866565b90506000856001600160a01b031663bd02d0f5611cab8760006124d1565b6040518263ffffffff1660e01b8152600401611cc991815260200190565b602060405180830381865afa158015611ce6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0a9190613866565b905080821115611d18578091505b909590945092505050565b600081611d31578251610d4e565b50506020015190565b600080611d5085611d4a86610599565b85611c02565b905060008413611d7157611d6381610a38565b611d6c9061378b565b610bf1565b610bf181610a38565b6000604051602001611249906020808252600d908201526c2aa4afa322a2afa320a1aa27a960991b604082015260600190565b600080611dc28460400151856060015161254b565b905080856001600160a01b031663bd02d0f5611de287600001518761257a565b6040518263ffffffff1660e01b8152600401611e0091815260200190565b602060405180830381865afa158015611e1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e419190613866565b610bf191906137d7565b6000818311611e6357611e5e83836137fe565b610d4e565b610d4e82846137fe565b6000604051602001611249906020808252601b908201527a29aba0a82fa4a6a820a1aa2fa2ac2827a722a72a2fa320a1aa27a960291b604082015260600190565b600080600061103f8686611eef565b600084841081611ee1611ed18887876125ab565b611edc8888886125ab565b611e4b565b90506000610e4382846125c4565b6000806000846001600160a01b031663bd02d0f5611f0e8660016125e7565b6040518263ffffffff1660e01b8152600401611f2c91815260200190565b602060405180830381865afa158015611f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6d9190613866565b90506000856001600160a01b031663bd02d0f5611cab8760006125e7565b600080611f998786856125ab565b90506000611fa88786866125ab565b90506000611fb68383611e4b565b90506000611fc6828486116125c4565b9a9950505050505050505050565b6000604051602001611249906020808252601190820152701592549515505317d3505492d15517d251607a1b604082015260600190565b600060405160200161204c906020808252601b908201527a5649525455414c5f494e56454e544f52595f464f525f535741505360281b604082015260600190565b60408051601f19818403018152828252805160209182012090830152810184905282151560608201526080015b60405160208183030381529060405280519060200120905092915050565b60006040516020016120d49060208082526017908201527614d5d05417d253541050d517d413d3d317d05353d55395604a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038086169183019190915283166060820152608001612079565b6000806121268460400151856060015161254b565b9050600061213f8686600001518760400151878661261f565b905060006121588787600001518860600151888761261f565b905061020881836137eb565b61216c6132d2565b606084015183908390156121d8576000866040015112801561219d57508461219b87604001516105319061378b565b115b156121c35785604001518560405163756d7c9d60e11b815260040161037f92919061366b565b6121d1858760400151611bd2565b9150612232565b600086604001511280156121fb5750836121f987604001516105319061378b565b115b156122215785604001518460405163022bc34560e61b815260040161037f92919061366b565b61222f848760400151611bd2565b90505b60408051608081018252958652602086019490945292840152506060820152919050565b6000604051602001611249906020808252601f908201527f504f534954494f4e5f494d504143545f4558504f4e454e545f464143544f5200604082015260600190565b600080600061103f86865b6000806000846001600160a01b031663bd02d0f56122c38660016126a5565b6040518263ffffffff1660e01b81526004016122e191815260200190565b602060405180830381865afa1580156122fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123229190613866565b90506000856001600160a01b031663bd02d0f5611cab8760006126a5565b60006040516020016112499060208082526010908201526f1592549515505317d513d2d15397d25160821b604082015260600190565b60006040516020016123b9906020808252601f908201527f5649525455414c5f494e56454e544f52595f464f525f504f534954494f4e5300604082015260600190565b604051602081830303815290604052805190602001208260405160200161127792919061366b565b6000604051602001611249906020808252601b908201527a1413d4d2551253d397d253541050d517d413d3d317d05353d55395602a1b604082015260600190565b600080806000198587098587029250828110838203039150508060000361245c57838281612452576124526137c1565b0492505050610d4e565b80841161246857600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000604051602001612511906020808252601a908201527926a0ac2fa827a9a4aa24a7a72fa4a6a820a1aa2fa320a1aa27a960311b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038516908201528215156060820152608001612079565b6000816001600160a01b0316836001600160a01b03161461256d576001612570565b60025b60ff169392505050565b60006040516020016120d4906020808252600b908201526a1413d3d317d05353d5539560aa1b604082015260600190565b6000806125b885846126e1565b9050610bf1818561105a565b600081156125d557610f0783610a38565b6125de83610a38565b610f079061378b565b60006040516020016125119060208082526012908201527129aba0a82fa4a6a820a1aa2fa320a1aa27a960711b604082015260600190565b600081866001600160a01b031663bd02d0f561263c888888612740565b6040518263ffffffff1660e01b815260040161265a91815260200190565b602060405180830381865afa158015612677573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061269b9190613866565b61105091906137d7565b6000604051602001612511906020808252601690820152752827a9a4aa24a7a72fa4a6a820a1aa2fa320a1aa27a960511b604082015260600190565b600068327cb2734119d3b7a9601e1b8310156126ff575060006105ae565b68327cb2734119d3b7a9601e1b82036127195750816105ae565b6000612735612727856127d2565b612730856127d2565b6127e3565b90506113da81612823565b6000604051602001612773906020808252600d908201526c13d4115397d2539511549154d5609a1b604082015260600190565b60408051601f198184030181528282528051602091820120908301526001600160a01b038087169183019190915284166060820152821515608082015260a0016040516020818303038152906040528051906020012090509392505050565b60006105ae64e8d4a51000836137d7565b6000826000036128095781156127fa576000610f07565b50670de0b6b3a76400006105ae565b610d4e61281e61281885612834565b846128ea565b6128f6565b60006105ae64e8d4a5100083613774565b6000670de0b6b3a764000082101561286257604051633621413760e21b81526004810183905260240161037f565b6000612877670de0b6b3a7640000840461293c565b670de0b6b3a764000081029250905082811c670de0b6b3a763ffff1981016128a0575050919050565b6706f05b59d3b200005b80156128e257670de0b6b3a7640000828002049150671bc16d674ec8000082106128da579283019260019190911c905b60011c6128aa565b505050919050565b6000610d4e8383612a1f565b6000680a688906bd8b000000821061292457604051634a4f26f160e01b81526004810183905260240161037f565b670de0b6b3a7640000604083901b04610d4e81612ae5565b6000600160801b821061295c57608091821c9161295990826137eb565b90505b600160401b821061297a57604091821c9161297790826137eb565b90505b600160201b821061299857602091821c9161299590826137eb565b90505b6201000082106129b557601091821c916129b290826137eb565b90505b61010082106129d157600891821c916129ce90826137eb565b90505b601082106129ec57600491821c916129e990826137eb565b90505b60048210612a0757600291821c91612a0490826137eb565b90505b60028210612a1a576105ae6001826137eb565b919050565b60008080600019848609848602925082811083820303915050670de0b6b3a76400008110612a635760405163698d9a0160e11b81526004810182905260240161037f565b600080670de0b6b3a764000086880991506706f05b59d3b1ffff8211905082600003612aa15780670de0b6b3a76400008504019450505050506105ae565b620400008285030493909111909103600160ee1b02919091177faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106690201905092915050565b600160bf1b6001603f1b821615612b055768016a09e667f3bcc9090260401c5b6001603e1b821615612b20576801306fe0a31b7152df0260401c5b6001603d1b821615612b3b576801172b83c7d517adce0260401c5b6001603c1b821615612b565768010b5586cf9890f62a0260401c5b6001603b1b821615612b71576801059b0d31585743ae0260401c5b6001603a1b821615612b8c57680102c9a3e778060ee70260401c5b600160391b821615612ba75768010163da9fb33356d80260401c5b600160381b821615612bc257680100b1afa5abcbed610260401c5b600160371b821615612bdd5768010058c86da1c09ea20260401c5b600160361b821615612bf8576801002c605e2e8cec500260401c5b600160351b821615612c1357680100162f3904051fa10260401c5b600160341b821615612c2e576801000b175effdc76ba0260401c5b600160331b821615612c4957680100058ba01fb9f96d0260401c5b600160321b821615612c645768010002c5cc37da94920260401c5b600160311b821615612c7f576801000162e525ee05470260401c5b600160301b821615612c9a5768010000b17255775c040260401c5b6001602f1b821615612cb5576801000058b91b5bc9ae0260401c5b6001602e1b821615612cd057680100002c5c89d5ec6d0260401c5b6001602d1b821615612ceb5768010000162e43f4f8310260401c5b6001602c1b821615612d0657680100000b1721bcfc9a0260401c5b6001602b1b821615612d215768010000058b90cf1e6e0260401c5b6001602a1b821615612d3c576801000002c5c863b73f0260401c5b600160291b821615612d5757680100000162e430e5a20260401c5b600160281b821615612d72576801000000b1721835510260401c5b600160271b821615612d8d57680100000058b90c0b490260401c5b600160261b821615612da85768010000002c5c8601cc0260401c5b600160251b821615612dc3576801000000162e42fff00260401c5b600160241b821615612dde5768010000000b17217fbb0260401c5b600160231b821615612df9576801000000058b90bfce0260401c5b600160221b821615612e1457680100000002c5c85fe30260401c5b600160211b821615612e2f5768010000000162e42ff10260401c5b600160201b821615612e4a57680100000000b17217f80260401c5b6380000000821615612e655768010000000058b90bfc0260401c5b6340000000821615612e80576801000000002c5c85fe0260401c5b6320000000821615612e9b57680100000000162e42ff0260401c5b6310000000821615612eb6576801000000000b17217f0260401c5b6308000000821615612ed157680100000000058b90c00260401c5b6304000000821615612eec5768010000000002c5c8600260401c5b6302000000821615612f07576801000000000162e4300260401c5b6301000000821615612f225768010000000000b172180260401c5b62800000821615612f3c576801000000000058b90c0260401c5b62400000821615612f5657680100000000002c5c860260401c5b62200000821615612f705768010000000000162e430260401c5b62100000821615612f8a57680100000000000b17210260401c5b62080000821615612fa45768010000000000058b910260401c5b62040000821615612fbe576801000000000002c5c80260401c5b62020000821615612fd857680100000000000162e40260401c5b62010000821615612ff15761b172600160401b010260401c5b618000821615613009576158b9600160401b010260401c5b61400082161561302157612c5d600160401b010260401c5b6120008216156130395761162e600160401b010260401c5b61100082161561305157610b17600160401b010260401c5b6108008216156130695761058c600160401b010260401c5b610400821615613081576102c6600160401b010260401c5b61020082161561309957610163600160401b010260401c5b6101008216156130b05760b1600160401b010260401c5b60808216156130c6576059600160401b010260401c5b60408216156130dc57602c600160401b010260401c5b60208216156130f2576016600160401b010260401c5b601082161561310857600b600160401b010260401c5b600882161561311e576006600160401b010260401c5b6004821615613134576003600160401b010260401c5b600282161561314a576001600160401b010260401c5b6001821615613160576001600160401b010260401c5b670de0b6b3a76400000260409190911c60bf031c90565b60405180606001604052806000815260200160008152602001600081525090565b604080516101a081018252600060e08201818152610100830182905261012083018290526101408301829052610160830182905261018083018290528252825160808101845281815260208082018390528185018390526060820192909252908201529081016132066132fa565b81526000602082015260400161321a6133bb565b815260006020820181905260409091015290565b6040518060c0016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b6040518060c0016040528060006001600160a01b031681526020016132906132b8565b815260200161329d6132b8565b81526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b604080516101408101909152600060608083018281526080840183905260a0840183905260c0840183905260e0840183905261010084019290925261012083015281526020810161339860408051610140810190915280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260408051606081018252600080825260208281018290529282015291015290565b6040805160c081019091526000606082018181526080830182905260a0830191909152819081526020016134346040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526040805160208181019092526000815291015290565b6001600160a01b0381168114610c4257600080fd5b8035612a1a8161344c565b60006080828403121561347e57600080fd5b604051608081016001600160401b03811182821017156134ae57634e487b7160e01b600052604160045260246000fd5b60405290508082356134bf8161344c565b815260208301356134cf8161344c565b602082015260408301356134e28161344c565b604082015260608301356134f58161344c565b6060919091015292915050565b60006040828403121561351457600080fd5b604080519081016001600160401b038111828210171561354457634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b6000806000806000806000610160888a03121561357a57600080fd5b87356135858161344c565b96506135948960208a0161346c565b95506135a38960a08a01613502565b945060e088013593506101008801359250610120880135915061014088013580151581146135d057600080fd5b8091505092959891949750929550565b6000806000806000806000610180888a0312156135fc57600080fd5b87356136078161344c565b96506136168960208a0161346c565b955060a08801356136268161344c565b945060c08801356136368161344c565b935060e0880135925061364d896101008a01613502565b915061365d896101408a01613502565b905092959891949750929550565b918252602082015260400190565b6000806000806000808688036101c081121561369457600080fd5b873561369f8161344c565b96506136ae8960208a0161346c565b955060c0609f19820112156136c257600080fd5b50604051606081016001600160401b03811182821017156136f357634e487b7160e01b600052604160045260246000fd5b6040526137038960a08a01613502565b81526137128960e08a01613502565b6020820152613725896101208a01613502565b6040820152935061016087013561373b8161344c565b925061018087013591506137526101a08801613461565b90509295509295509295565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105ae576105ae61375e565b6000600160ff1b82016137a0576137a061375e565b5060000390565b6001600160a01b0392831681529116602082015260400190565b634e487b7160e01b600052601260045260246000fd5b6000826137e6576137e66137c1565b500490565b808201808211156105ae576105ae61375e565b818103818111156105ae576105ae61375e565b600082613820576138206137c1565b600160ff1b82146000198414161561383a5761383a61375e565b500590565b818103600083128015838313168383128216171561385f5761385f61375e565b5092915050565b60006020828403121561387857600080fd5b5051919050565b808201828112600083128015821682158216171561389f5761389f61375e565b505092915050565b80820260008212600160ff1b841416156138c3576138c361375e565b81810583148215176105ae576105ae61375e56fea2646970667358221220c03c810fd9b705d510707b8f76d95487094cfaf7648a50269769a70aebf7e2f664736f6c63430008120033";

type ReaderPricingUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReaderPricingUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReaderPricingUtils__factory extends ContractFactory {
  constructor(...args: ReaderPricingUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReaderPricingUtils> {
    return super.deploy(overrides || {}) as Promise<ReaderPricingUtils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReaderPricingUtils {
    return super.attach(address) as ReaderPricingUtils;
  }
  override connect(signer: Signer): ReaderPricingUtils__factory {
    return super.connect(signer) as ReaderPricingUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReaderPricingUtilsInterface {
    return new utils.Interface(_abi) as ReaderPricingUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReaderPricingUtils {
    return new Contract(address, _abi, signerOrProvider) as ReaderPricingUtils;
  }
}
