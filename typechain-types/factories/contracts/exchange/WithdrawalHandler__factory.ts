/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WithdrawalHandler,
  WithdrawalHandlerInterface,
} from "../../../contracts/exchange/WithdrawalHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RoleStore",
        name: "_roleStore",
        type: "address",
      },
      {
        internalType: "contract DataStore",
        name: "_dataStore",
        type: "address",
      },
      {
        internalType: "contract EventEmitter",
        name: "_eventEmitter",
        type: "address",
      },
      {
        internalType: "contract WithdrawalVault",
        name: "_withdrawalVault",
        type: "address",
      },
      {
        internalType: "contract Oracle",
        name: "_oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "compactedValues",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slotIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
    ],
    name: "CompactedArrayOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "DisabledFeature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "EmptyCompactedBlockNumber",
    type: "error",
  },
  {
    inputs: [],
    name: "EndOfOracleSimulation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startingGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minHandleErrorGas",
        type: "uint256",
      },
    ],
    name: "InsufficientExecutionGas",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "primaryTokensLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "primaryPricesLength",
        type: "uint256",
      },
    ],
    name: "InvalidPrimaryPricesForSimulation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestAge",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestExpirationAge",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "requestType",
        type: "string",
      },
    ],
    name: "RequestNotYetCancellable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "OracleError",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "signerInfo",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinOracleBlockNumbers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxOracleBlockNumbers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedOracleTimestamps",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedDecimals",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinPrices",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinPricesIndexes",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxPrices",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxPricesIndexes",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "signatures",
            type: "bytes[]",
          },
          {
            internalType: "address[]",
            name: "priceFeedTokens",
            type: "address[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "oracleParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "keeper",
        type: "address",
      },
    ],
    name: "_executeWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "cancelWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "callbackContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "uiFeeReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "longTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "shortTokenSwapPath",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "minLongTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minShortTokenAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "shouldUnwrapNativeToken",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "executionFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "callbackGasLimit",
            type: "uint256",
          },
        ],
        internalType: "struct WithdrawalUtils.CreateWithdrawalParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createWithdrawal",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [
      {
        internalType: "contract DataStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [
      {
        internalType: "contract EventEmitter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "signerInfo",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinOracleBlockNumbers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxOracleBlockNumbers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedOracleTimestamps",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedDecimals",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinPrices",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMinPricesIndexes",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxPrices",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "compactedMaxPricesIndexes",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "signatures",
            type: "bytes[]",
          },
          {
            internalType: "address[]",
            name: "priceFeedTokens",
            type: "address[]",
          },
        ],
        internalType: "struct OracleUtils.SetPricesParams",
        name: "oracleParams",
        type: "tuple",
      },
    ],
    name: "executeWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract Oracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [
      {
        internalType: "contract RoleStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "primaryTokens",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "min",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "max",
                type: "uint256",
              },
            ],
            internalType: "struct Price.Props[]",
            name: "primaryPrices",
            type: "tuple[]",
          },
        ],
        internalType: "struct OracleUtils.SimulatePricesParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "simulateExecuteWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalVault",
    outputs: [
      {
        internalType: "contract WithdrawalVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162002e2c38038062002e2c833981016040819052620000359162000078565b6001600160a01b0393841660805293831660a05290821660c052811660e0521661010052620000f8565b6001600160a01b03811681146200007557600080fd5b50565b600080600080600060a086880312156200009157600080fd5b85516200009e816200005f565b6020870151909550620000b1816200005f565b6040870151909450620000c4816200005f565b6060870151909350620000d7816200005f565b6080870151909250620000ea816200005f565b809150509295509295909350565b60805160a05160c05160e05161010051612c48620001e4600039600081816101780152818161025f015281816105a401526106ba01526000818161013e0152818161057501528181610a2001528181610b940152610f8e0152600081816101c0015281816102a101528181610546015281816109ff01528181610b720152610f6c01526000818160ad0152610de70152600081816101170152818161028001528181610337015281816104ac015281816105170152818161090401528181610af901528181610b5001528181610c1501528181610d1801528181610f4a0152610ff90152612c486000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c806340a0f0e6146100935780634a4a7b04146100a85780635a986a7d146100ec5780636331d7a7146100ff578063660d0d671461011257806369d42148146101395780637213c5a0146101605780637dc0d1d01461017357806398b523ca1461019a5780639ff78c30146101bb575b600080fd5b6100a66100a13660046117c1565b6101e2565b005b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a66100fa366004611cbb565b610459565b6100a661010d366004611d15565b610668565b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6100a661016e366004611e2d565b6108d5565b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101ad6101a8366004611e46565b610ad8565b6040519081526020016100e3565b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101ea610c11565b61025d60405160200161021d906020808252600c908201526b27a92222a92fa5a2a2a822a960a11b604082015260600190565b604051602081830303815290604052805190602001206040518060400160405280600c81526020016b27a92222a92fa5a2a2a822a960a11b815250610dd0565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006102c984611e92565b60405163df02681160e01b81526001600160a01b0385169063df026811906102f9908690869086906004016120ec565b600060405180830381600087803b15801561031357600080fd5b505af1158015610327573d6000803e3d6000fd5b5050505060005a9050600061035c7f000000000000000000000000000000000000000000000000000000000000000083610e80565b604051635a986a7d60e01b81529091503090635a986a7d908390610388908c908c90339060040161228d565b600060405180830381600088803b1580156103a257600080fd5b5087f1935050505080156103b4575060015b6103f5573d8080156103e2576040519150601f19603f3d011682016040523d82523d6000602084013e6103e7565b606091505b506103f3898483610ecb565b505b5050836001600160a01b031662ccf1556040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b5050505050505050610455610ff7565b5050565b3330146104a2576040805163a35b150b60e01b815233600480830191909152602482019290925260448101919091526329a2a62360e11b60648201526084015b60405180910390fd5b60005a90506104d97f00000000000000000000000000000000000000000000000000000000000000006104d4306110b1565b61114a565b60006104ee8460400151856020015151611175565b905060006105058560600151866020015151611175565b905060006040518061012001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001888152602001848152602001838152602001866001600160a01b0316815260200185815250905073__$b16dc1d178619391e781edffc4bee00572$__633c0ba338826040518263ffffffff1660e01b815260040161062f9190612474565b60006040518083038186803b15801561064757600080fd5b505af415801561065b573d6000803e3d6000fd5b5050505050505050505050565b6106b860405160200161067a9061252c565b604051602081830303815290604052805190602001206040518060400160405280600a81526020016921a7a72a2927a62622a960b11b815250610dd0565b7f000000000000000000000000000000000000000000000000000000000000000081806020015151816000015151146107165780515160208201515160405163663de02360e01b815260048101929092526024820152604401610499565b60005b8151518110156107ed5760008260000151828151811061073b5761073b612550565b6020026020010151905060008360200151838151811061075d5761075d612550565b6020908102919091018101516040516347cba33d60e01b81526001600160a01b03858116600483015282516024830152928201516044820152909250908616906347cba33d90606401600060405180830381600087803b1580156107c057600080fd5b505af11580156107d4573d6000803e3d6000fd5b50505050505080806107e59061257c565b915050610719565b506107f6610c11565b61085a6040518061018001604052806000815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b604051635a986a7d60e01b81523090635a986a7d9061088190889085903390600401612595565b600060405180830381600087803b15801561089b57600080fd5b505af11580156108af573d6000803e3d6000fd5b50505050506108bc610ff7565b6040516327246e6d60e11b815260040160405180910390fd5b6108dd610c11565b6108ef60405160200161067a9061252c565b60005a60405163fdfc26f360e01b81529091507f00000000000000000000000000000000000000000000000000000000000000009060009073__$3dc24d71d6ebafc0c4ce8ac2f69cd1548a$__9063fdfc26f39061095390859088906004016125c6565b600060405180830381865af4158015610970573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109989190810190612724565b90506109a7826104d430611209565b6109e2826109ba83602001516060015190565b6040518060400160405280600a81526020016915da5d1a191c985dd85b60b21b815250611257565b73__$b16dc1d178619391e781edffc4bee00572$__63e923fdc4837f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000088610a4987515190565b60408051808201825260158152741554d15497d2539255125055115117d0d05390d153605a1b602082015290516001600160e01b031960e089901b168152610a9a9695949392918c9160040161285a565b60006040518083038186803b158015610ab257600080fd5b505af4158015610ac6573d6000803e3d6000fd5b50505050505050610ad5610ff7565b50565b6000610ae2610c11565b610af460405160200161067a9061252c565b610b217f00000000000000000000000000000000000000000000000000000000000000006104d430611364565b6040516322d0c78160e11b815273__$b16dc1d178619391e781edffc4bee00572$__906345a18f0290610bc0907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000907f000000000000000000000000000000000000000000000000000000000000000090899089906004016128d0565b602060405180830381865af4158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c019190612a05565b9050610c0b610ff7565b92915050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd02d0f5604051602001610c5190612a1e565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401610c8591815260200190565b602060405180830381865afa158015610ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc69190612a05565b90508015610d165760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610499565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e2a4853a604051602001610d5490612a1e565b60408051601f198184030181529082905280516020909101206001600160e01b031960e084901b1682526004820152600160248201526044016020604051808303816000875af1158015610dac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104559190612a05565b60405163ac4ab3fb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ac4ab3fb90610e1e90339086906004016125c6565b602060405180830381865afa158015610e3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5f9190612a4f565b61045557338160405163a35b150b60e01b8152600401610499929190612a6c565b600080610e8c846113b2565b905080831015610eb957604051631c09bc2160e01b81526004810184905260248101829052604401610499565b610ec38184612a90565b949350505050565b6000610ed8826020015190565b9050610ee381611479565b80610efe57506001600160e01b0319811663dd70e0c960e01b145b15610f0c57610f0c826114af565b6000610f17836114b8565b50604051633a48ff7160e21b815290915073__$b16dc1d178619391e781edffc4bee00572$";

type WithdrawalHandlerConstructorParams =
  | [linkLibraryAddresses: WithdrawalHandlerLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawalHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class WithdrawalHandler__factory extends ContractFactory {
  constructor(...args: WithdrawalHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        WithdrawalHandler__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: WithdrawalHandlerLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b16dc1d178619391e781edffc4bee00572\\$__", "g"),
      linkLibraryAddresses[
        "contracts/withdrawal/WithdrawalUtils.sol:WithdrawalUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3dc24d71d6ebafc0c4ce8ac2f69cd1548a\\$__", "g"),
      linkLibraryAddresses[
        "contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _withdrawalVault: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawalHandler> {
    return super.deploy(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _withdrawalVault,
      _oracle,
      overrides || {}
    ) as Promise<WithdrawalHandler>;
  }
  override getDeployTransaction(
    _roleStore: PromiseOrValue<string>,
    _dataStore: PromiseOrValue<string>,
    _eventEmitter: PromiseOrValue<string>,
    _withdrawalVault: PromiseOrValue<string>,
    _oracle: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _roleStore,
      _dataStore,
      _eventEmitter,
      _withdrawalVault,
      _oracle,
      overrides || {}
    );
  }
  override attach(address: string): WithdrawalHandler {
    return super.attach(address) as WithdrawalHandler;
  }
  override connect(signer: Signer): WithdrawalHandler__factory {
    return super.connect(signer) as WithdrawalHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawalHandlerInterface {
    return new utils.Interface(_abi) as WithdrawalHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawalHandler {
    return new Contract(address, _abi, signerOrProvider) as WithdrawalHandler;
  }
}

export interface WithdrawalHandlerLibraryAddresses {
  ["contracts/withdrawal/WithdrawalUtils.sol:WithdrawalUtils"]: string;
  ["contracts/withdrawal/WithdrawalStoreUtils.sol:WithdrawalStoreUtils"]: string;
}
